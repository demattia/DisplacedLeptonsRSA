/********************************************************************
* MyDict.h
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************************/
#ifdef __CINT__
#error MyDict.h/C is only for compilation. Abort cint.
#endif
#include <stddef.h>
#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#include <string.h>
#define G__ANSIHEADER
#define G__DICTIONARY
#define G__PRIVATE_GVALUE
#include "G__ci.h"
#include "FastAllocString.h"
extern "C" {
extern void G__cpp_setup_tagtableMyDict();
extern void G__cpp_setup_inheritanceMyDict();
extern void G__cpp_setup_typetableMyDict();
extern void G__cpp_setup_memvarMyDict();
extern void G__cpp_setup_globalMyDict();
extern void G__cpp_setup_memfuncMyDict();
extern void G__cpp_setup_funcMyDict();
extern void G__set_cpp_environmentMyDict();
}


#include "TObject.h"
#include "TMemberInspector.h"
#include "../../../../RootTreeProducers//interface/Track.h"
#include "../../../../RootTreeProducers//interface/GenParticle.h"
#include <algorithm>
namespace std { }
using namespace std;

#ifndef G__MEMFUNCBODY
#endif

extern G__linked_taginfo G__MyDictLN_TClass;
extern G__linked_taginfo G__MyDictLN_TBuffer;
extern G__linked_taginfo G__MyDictLN_TMemberInspector;
extern G__linked_taginfo G__MyDictLN_TObject;
extern G__linked_taginfo G__MyDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR;
extern G__linked_taginfo G__MyDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR;
extern G__linked_taginfo G__MyDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR;
extern G__linked_taginfo G__MyDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR;
extern G__linked_taginfo G__MyDictLN_TMatrixTBaselEfloatgR;
extern G__linked_taginfo G__MyDictLN_TMatrixTBaselEdoublegR;
extern G__linked_taginfo G__MyDictLN_TVectorTlEfloatgR;
extern G__linked_taginfo G__MyDictLN_TVectorTlEdoublegR;
extern G__linked_taginfo G__MyDictLN_TElementActionTlEfloatgR;
extern G__linked_taginfo G__MyDictLN_TElementPosActionTlEfloatgR;
extern G__linked_taginfo G__MyDictLN_TMatrixTlEfloatgR;
extern G__linked_taginfo G__MyDictLN_TMatrixTRow_constlEfloatgR;
extern G__linked_taginfo G__MyDictLN_TMatrixTRowlEfloatgR;
extern G__linked_taginfo G__MyDictLN_TMatrixTDiag_constlEfloatgR;
extern G__linked_taginfo G__MyDictLN_TMatrixTColumn_constlEfloatgR;
extern G__linked_taginfo G__MyDictLN_TMatrixTFlat_constlEfloatgR;
extern G__linked_taginfo G__MyDictLN_TMatrixTSub_constlEfloatgR;
extern G__linked_taginfo G__MyDictLN_TMatrixTSparseRow_constlEfloatgR;
extern G__linked_taginfo G__MyDictLN_TMatrixTSparseDiag_constlEfloatgR;
extern G__linked_taginfo G__MyDictLN_TMatrixTColumnlEfloatgR;
extern G__linked_taginfo G__MyDictLN_TMatrixTDiaglEfloatgR;
extern G__linked_taginfo G__MyDictLN_TMatrixTFlatlEfloatgR;
extern G__linked_taginfo G__MyDictLN_TMatrixTSublEfloatgR;
extern G__linked_taginfo G__MyDictLN_TMatrixTSparseRowlEfloatgR;
extern G__linked_taginfo G__MyDictLN_TMatrixTSparseDiaglEfloatgR;
extern G__linked_taginfo G__MyDictLN_Track;
extern G__linked_taginfo G__MyDictLN_GenParticle;
extern G__linked_taginfo G__MyDictLN_vectorlETrackcOallocatorlETrackgRsPgR;
extern G__linked_taginfo G__MyDictLN_vectorlETrackcOallocatorlETrackgRsPgRcLcLiterator;
extern G__linked_taginfo G__MyDictLN_reverse_iteratorlEvectorlETrackcOallocatorlETrackgRsPgRcLcLiteratorgR;
extern G__linked_taginfo G__MyDictLN_vectorlEGenParticlecOallocatorlEGenParticlegRsPgR;
extern G__linked_taginfo G__MyDictLN_vectorlEGenParticlecOallocatorlEGenParticlegRsPgRcLcLiterator;
extern G__linked_taginfo G__MyDictLN_reverse_iteratorlEvectorlEGenParticlecOallocatorlEGenParticlegRsPgRcLcLiteratorgR;

/* STUB derived class for protected member access */
typedef vector<Track,allocator<Track> > G__vectorlETrackcOallocatorlETrackgRsPgR;
typedef vector<GenParticle,allocator<GenParticle> > G__vectorlEGenParticlecOallocatorlEGenParticlegRsPgR;
